# Args: <path_to_bop_data> <bop_datset_name> <bop_toolkit_path> <path_to_cc_textures> <output_dir>
{
  "version": 3,
  "setup": {
    "blender_install_path": "/home_local/<env:USER>/blender/",
    "pip": [
      "h5py",
      "scikit-image",
      "pypng==0.0.20",
      "scipy==1.2.2"
    ]
  },
  "modules": [
    {
      "module": "main.Initializer",
      "config": {
        "global": {
          "output_dir": "<args:7>",
          "sys_paths": ["<args:5>"]
        }
      }
    },
    {
      "module": "loader.BlendLoader",
      "config": {
        "path": "ImageGenConfig/scene.blend",
        "load_from": "/Collection",
        "add_properties": {
          "cp_physics": False
        },
      }
    },
    {
      "module": "loader.BopLoader",
      "config": {
        "bop_dataset_path": "<args:0>/<args:1>",
        "model_type": "",
        "mm2m": True,
        "sample_objects": True,
        "num_of_objs_to_sample": <args:2>,
        "obj_instances_limit": -1,
        "add_properties": {
          "cp_physics": True
        },
        "scale": 1.0,   # we set the default to 0.5
        "cf_set_shading": "SMOOTH"
      }
    },
    {
      "module": "loader.BopLoader",
      "config": {
        "bop_dataset_path": "<args:0>/<args:3>",
        "model_type": "",
        "mm2m": True,
        "sample_objects": True,
        "num_of_objs_to_sample": <args:4>,
        "obj_instances_limit": -1,
        "add_properties": {
          "cp_physics": True
        },
        "scale": 1.0,   # we set the default to 0.5
        "cf_set_shading": "SMOOTH"
      }
    },
    {
      "module": "manipulators.MaterialManipulator",
      "config": {
        "selector": {
          "provider": "getter.Material",
          "conditions": [
          {
            "name": "bop_tless_vertex_col_material.*"
          }
          ]
        },
        "cf_set_base_color": {
          "provider": "sampler.Color",
          "grey": True,
          "min": [0.1, 0.1, 0.1, 1.0],
          "max": [0.9, 0.9, 0.9, 1.0]
        }
      }
    },
    {
      "module": "manipulators.MaterialManipulator",
      "config": {
        "selector": {
          "provider": "getter.Material",
          "conditions": [
          {
            "name": "bop_tless_vertex_col_material.*"
          },
          {
            "name": "bop_lm_vertex_col_material.*"
          },
          {
            "name": "bop_<args:1>_vertex_col_material.*"
          },
          {
            "name": "bop_<args:3>_vertex_col_material.*"
          }
          ]
        },
        "cf_set_specular": {
          "provider": "sampler.Value",
          "type": "float",
          "min": 0.0,
          "max": 1.0
        },
        "cf_set_roughness": {
          "provider": "sampler.Value",
          "type": "float",
          "min": 0.0,
          "max": 1.0
        }
      }
    },
    {
      "module": "manipulators.EntityManipulator",
      "config": {
        "selector": {
          "provider": "getter.Entity",
          "conditions": {
            "name": 'Box'
          }
        },
        "cp_physics": False,
      }
    },
    {
      "module": "manipulators.MaterialManipulator",
      "config": {
        "selector": {
          "provider": "getter.Material",
          "conditions": {
            "name": "light_plane_material"
          }
        },
        "cf_switch_to_emission_shader": {
          "color": {
            "provider": "sampler.Color",
            "min": [0.5, 0.5, 0.5, 1.0],
            "max": [1.0, 1.0, 1.0, 1.0]
          },
          "strength": {
            "provider": "sampler.Value",
            "type": "float",
            "min": 3,
            "max": 6
          }
        }
      }
    },
    {
      "module": "loader.CCMaterialLoader",
      "config": {
        "folder_path": "<args:6>"
      }
    },
    {
      "module": "manipulators.EntityManipulator",
      "config": {
        "selector": {
          "provider": "getter.Entity",
          "conditions": {
            "name": "ground_plane.*"
          }
        },
        "mode": "once_for_all",
        "cf_randomize_materials": {
          "randomization_level": 1,
          "materials_to_replace_with": {
            "provider": "getter.Material",
            "random_samples": 1,
            "conditions": {
              "cp_is_cc_texture": True
            }
          }
        }
      }
    },
    {
      "module": "object.ObjectPoseSampler",
      "config": {
        "objects_to_sample": {
          "provider": "getter.Entity",
          "conditions": {
            "cp_physics": True
          }
        },
        "pos_sampler":{
              "provider": "sampler.Uniform3d",
              "max": [0.575, 0.15, 1],
              "min": [0.325, -0.15, 0.15]
        },
        "rot_sampler":{
          "provider":"sampler.UniformSO3"
        }
      }
    },
    {
      "module": "object.PhysicsPositioning",
      "config": {
        "min_simulation_time": 3,
        "max_simulation_time": 10,
        "check_object_interval": 1,
        "solver_iters": 25,
        "steps_per_sec": 100,
        "friction": 100.0,
        "linear_damping": 0.99,
        "angular_damping": 0.99,
        "objs_with_box_collision_shape": {
          "provider": "getter.Entity",
          "conditions": {
            "name": "ground_plane.*"
          }
        }
      }
    },
    {
      "module": "lighting.LightSampler",
      "config": {
        "lights": [
        {
          "location": {
            "provider": "sampler.Shell",
            "center": [0, 0, 0],
            "radius_min": 1,
            "radius_max": 1.5,
            "elevation_min": 5,
            "elevation_max": 89,
            "uniform_elevation": True
          },
          "color": {
            "provider": "sampler.Color",
            "min": [0.5, 0.5, 0.5, 1.0],
            "max": [1.0, 1.0, 1.0, 1.0]
          },
          "type": "POINT",
          "energy": 200
        }
        ]
      }
    },
    # {
    #   "module": "camera.CameraLoader",
    #   "config": {
    #     "path": "ImageGenConfig/camera_positions",
    #     "file_format": "location rotation/value",
    #     "default_cam_param": {
    #       "fov": 1.0,
    #       "cam_K": [1122.375, 0, 334.4445, 0, 1122.375, 264.443075, 0, 0, 1],
    #       "resolution_x": 671, #1032
    #       "resolution_y": 502 #772
    #     }
    #   }
    # },
    {
      "module": "camera.CameraSampler",
      "config": {
        "cam_poses": [
          {
            "number_of_samples": 1,
            "location": {
              "provider":"sampler.Uniform3d",
              "max":[0.4431, -0.230894, 1.33803],
              "min":[0.3431, -0.330894, 1.33803]
            },
            "rotation": {
              "format": "euler",
              "value": [-0.0047414981311784225, 0.16891201024881314, -1.5604671469044196]
            }
          }
        ],
        "default_cam_param": {
          "fov": 1.0,
          "cam_K": [1122.375, 0, 334.4445, 0, 1122.375, 264.443075, 0, 0, 1],
          "resolution_x": 671, #1032
          "resolution_y": 502 #772
        }
      }
    },
    # {
    #   "module": "camera.CameraSampler",
    #   "config": {
    #     "cam_poses": [
    #     {
    #       "proximity_checks": {
    #         "min": 0.3
    #       },
    #       "excluded_objs_in_proximity_check":  {
    #         "provider": "getter.Entity",
    #         "conditions": {
    #           "name": "ground_plane.*",
    #           "type": "MESH"
    #         }
    #       },
    #       "number_of_samples": 1,
    #       "location": {
    #         "provider": "sampler.Shell",
    #         "center": [0, 0, 0],
    #         "radius_min": 1.0,
    #         "radius_max": 1.0,
    #         "elevation_min": 90,
    #         "elevation_max": 90,
    #         "uniform_elevation": True
    #       },
    #       "rotation": {
    #         "format": "look_at",
    #         "value": {
    #           "provider": "getter.POI",
    #           "selector": {
    #             "provider": "getter.Entity",
    #             "conditions": {
    #               "type": "MESH",
    #               "cp_bop_dataset_name": "<args:1>",
    #             },
    #             "random_samples": 1
    #           }
    #         },
    #         "inplane_rot": {
    #           "provider": "sampler.Value",
    #           "type": "float",
    #           "min": 0,
    #           "max": 0
    #         }
    #       }
    #     }
    #     ]
    #   }
    # },
    {
      "module": "renderer.RgbRenderer",
      "config": {
        "samples": 10,
        "render_distance": True,
        "image_type": "JPEG",
        "use_mist_distance": False
      }
    },
    {
      "module": "writer.BopWriter",
      "config": {
        "dataset": "custom-comb",
        "append_to_existing_output": True,
        "postprocessing_modules": {
          "distance": [
            {"module": "postprocessing.Dist2Depth"}
          ]
        }
      }
    }
  ]
}
